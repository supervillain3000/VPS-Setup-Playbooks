---
- name: Install required packages
  ansible.builtin.apt:
    name:
      - python3-psycopg2
    state: present

- name: Ensure /etc/apt/keyrings directory exists
  ansible.builtin.file:
    path: "{{ postgresql_apt_keys_dir }}"
    state: directory
    mode: "0755"

- name: Install pgdg package signing key
  ansible.builtin.get_url:
    url: "{{ postgresql_pgdg_key_url }}"
    dest: "{{ postgresql_pgdg_key_dest }}"
    mode: "0644"

- name: Install pgdg repository
  ansible.builtin.apt_repository:
    repo: "{{ postgresql_pgdg_repo }}"
    update_cache: true

- name: Install postgresql
  ansible.builtin.apt:
    name: postgresql-{{ postgresql_version }}
    update_cache: true
  notify:
    - Enable Postgresql

- name: Ensure PostgreSQL is listening on *
  ansible.builtin.lineinfile:
    dest: /etc/postgresql/{{ postgresql_version }}/main/postgresql.conf
    regexp: '^listen_addresses\s*='
    line: "listen_addresses='*'"
    state: present
  notify: Restart Postgresql

- name: Add new configuration to "pg_hba.conf"
  ansible.builtin.blockinfile:
    dest: /etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf
    block: |
      host    all             all             0.0.0.0/0                md5
      host    all             all             ::/0                     md5
  notify: Restart Postgresql

- name: Update pg_hba.conf to use trust authentication
  ansible.builtin.replace:
    path: "/etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf"
    regexp: 'ident'
    replace: 'trust'
    backup: true
  notify: Restart Postgresql

- name: Create a Superuser PostgreSQL database user
  become: true
  become_user: postgres
  community.postgresql.postgresql_user:
    name: "postgres"
    password: "{{ postgresql_admin_password }}"
    role_attr_flags: CREATEDB,SUPERUSER,CREATEROLE
    encrypted: true
    state: present

- name: Insert postgres superuser name into user password file
  ansible.builtin.blockinfile:
    dest: /root/04-postgres_admin_password
    insertbefore: BOF
    block: |
      Login: postgres
      Password: {{ postgresql_admin_password }}

- name: "Create app database"
  community.postgresql.postgresql_db:
    state: present
    name: "{{ postgresql_domain_short }}"
  become: true
  become_user: postgres

- name: "Create db user"
  community.postgresql.postgresql_user:
    state: present
    name: "{{ postgresql_domain_short }}"
    password: "{{ postgresql_user_password }}"
  become: true
  become_user: postgres

- name: Insert postgres user name into user password file
  ansible.builtin.blockinfile:
    dest: /root/03-postgres_password
    insertbefore: BOF
    block: |
      Данные для доступа к базе данных:
      Имя БД: {{ postgresql_domain_short }}
      Login: {{ postgresql_domain_short }}
      Password: {{ postgresql_user_password }}

- name: "Grant db user access to app db"
  community.postgresql.postgresql_privs:
    type: database
    database: "{{ postgresql_domain_short }}"
    roles: "{{ postgresql_domain_short }}"
    grant_option: false
    privs: all
  become: true
  become_user: postgres

- name: "Allow md5 connection for the db user"
  community.postgresql.postgresql_pg_hba:
    dest: "/etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf"
    contype: host
    databases: all
    method: md5
    users: "{{ postgresql_domain_short }}"
    create: true
  become: true
  become_user: postgres
  notify: Restart Postgresql
  tags: md5
