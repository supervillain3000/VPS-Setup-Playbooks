---
- name: Install required packages
  ansible.builtin.dnf:
    name:
      - python3-psycopg2
    state: present

- name: Import the PostgreSQL GPG key
  ansible.builtin.rpm_key:
    state: present
    key: "{{ postgresql_rpm_key }}"

- name: Install PostgreSQL
  ansible.builtin.dnf:
    name:
      - postgresql
      - postgresql-server
      - postgresql-contrib
    state: present
    enablerepo: "{{ postgresql_enablerepo }}"

- name: Initialize PostgreSQL database
  ansible.builtin.command:
    cmd: postgresql-setup initdb
  args:
    creates: /var/lib/pgsql/{{ postgresql_version }}/data/PG_VERSION

- name: Ensure PostgreSQL is enabled and started
  ansible.builtin.service:
    name: "postgresql"
    enabled: true
    state: started

- name: Ensure PostgreSQL is listening on *
  ansible.builtin.lineinfile:
    dest: /var/lib/pgsql/data/postgresql.conf
    regexp: '^#listen_addresses\s*='
    line: "listen_addresses = '*'"
    state: present
  notify: Restart Postgresql

- name: Add new configuration to "pg_hba.conf"
  ansible.builtin.blockinfile:
    dest: /var/lib/pgsql/data/pg_hba.conf
    block: |
      host    all             all             0.0.0.0/0                md5
      host    all             all             ::/0                     md5
  notify: Restart Postgresql

- name: Update pg_hba.conf to use trust authentication
  ansible.builtin.replace:
    path: /var/lib/pgsql/data/pg_hba.conf
    regexp: 'ident'
    replace: 'trust'
    backup: true
  notify: Restart Postgresql

- name: Create a Superuser PostgreSQL database user
  become: true
  become_user: postgres
  community.postgresql.postgresql_user:
    name: 'postgres'
    password: "{{ lookup('password', '/root/04-postgres_admin_password chars=ascii_letters,digits,hexdigits length=15') }}"
    role_attr_flags: CREATEDB,SUPERUSER,CREATEROLE
    encrypted: true
    state: present

- name: Insert postgres superuser name into user password file
  ansible.builtin.blockinfile:
    dest: /root/04-postgres_admin_password
    insertbefore: BOF
    block: |
      Админ-пользователь postgres:
      Логин: postgres

- name: Create app database
  community.postgresql.postgresql_db:
    state: present
    name: "{{ postgresql_domain_short }}"
  become: true
  become_user: postgres

- name: Create db user
  community.postgresql.postgresql_user:
    state: present
    name: "{{ postgresql_domain_short }}"
    password: "{{ lookup('password', '/root/03-postgres_password chars=ascii_letters,digits,hexdigits length=15') }}"
  become: true
  become_user: postgres

- name: Insert postgres user name into user password file
  ansible.builtin.blockinfile:
    dest: /root/03-postgres_password
    insertbefore: BOF
    block: |
      Данные для доступа к базе данных:
      Имя БД: {{ postgresql_domain_short }}
      Пользователь: {{ postgresql_domain_short }}

- name: Grant db user access to app db
  community.postgresql.postgresql_privs:
    type: database
    database: "{{ postgresql_domain_short }}"
    roles: "{{ postgresql_domain_short }}"
    grant_option: false
    privs: all
  become: true
  become_user: postgres

- name: Allow md5 connection for the db user
  community.postgresql.postgresql_pg_hba:
    dest: "/var/lib/pgsql/data/pg_hba.conf"
    contype: host
    databases: all
    method: md5
    users: "{{ postgresql_domain_short }}"
    create: true
  become: true
  become_user: postgres
  notify: Restart Postgresql
  tags: md5
