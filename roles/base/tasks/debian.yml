---
- name: Update and upgrade all packages
  ansible.builtin.apt:
    upgrade: safe
    update_cache: true

- name: Install debian base packages
  ansible.builtin.apt:
    name: "{{ base_debian_package_list }}"
    state: present

- name: Configure ufw defaults
  community.general.ufw:
    direction: "{{ item.direction }}"
    policy: "{{ item.policy }}"
  with_items:
    - direction: 'incoming'
      policy: 'deny'
    - direction: 'outgoing'
      policy: 'allow'
  notify:
    - Restart ufw

- name: Configure ufw rules
  community.general.ufw:
    rule: limit
    port: 22
    proto: tcp

- name: Enable ufw
  ansible.builtin.service:
    name: ufw
    state: started
    enabled: true

- name: Tune bash history for Debian
  ansible.builtin.blockinfile:
    dest: /etc/profile.d/history.sh
    create: true
    owner: root
    group: root
    mode: "0644"
    block: |
      export HISTCONTROL=ignoreboth:erasedups
      export PROMPT_COMMAND='RETRN_VAL=$?; logger -p local6.info "$(whoami) [$$]: $(history 1 | sed "s/^[ :0-9-]\+//" ) [$RETRN_VAL]"; history -a'
      export HISTFILESIZE=4096
      export HISTSIZE=4096
      export HISTTIMEFORMAT='%F %T  '
      readonly HISTTIMEFORMAT HISTSIZE HISTFILESIZE PROMPT_COMMAND HISTCONTROL
  when: ansible_facts['distribution'] != "Ubuntu"

- name: Remove histtime.sh
  ansible.builtin.file:
    path: /etc/profile.d/histtime.sh
    state: absent
  when: ansible_facts['distribution'] == "Ubuntu"

- name: Tune bash history for Ubuntu
  ansible.builtin.blockinfile:
    dest: /etc/profile.d/histtime.sh
    create: true
    owner: root
    group: root
    mode: "0644"
    block: |
      export HISTFILESIZE=4096
      export HISTSIZE=4096
      export HISTTIMEFORMAT='%F %T  '
  when: ansible_facts['distribution'] == "Ubuntu"

- name: Enable SSH PAM
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^#UsePAM'
    line: UsePAM yes
  notify: Restart sshd

- name: Install NTP
  ansible.builtin.apt:
    name: chrony
    state: present

- name: Ensure chrony is running and enabled
  ansible.builtin.service:
    name: chrony
    state: started
    enabled: true

- name: Set kernel parameters
  ansible.posix.sysctl:
    name: "vm.swappiness"
    value: "10"
    state: present
  notify: Reload sysctl

- name: Ensure rsyslog is installed
  ansible.builtin.apt:
    name: "rsyslog"
    state: present
    update_cache: true

- name: Enable and start rsyslog service
  ansible.builtin.service:
    name: "rsyslog"
    enabled: true
    state: started

- name: Ensure Logrotate runs daily instead of weekly
  ansible.builtin.replace:
    path: /etc/logrotate.conf
    regexp: "weekly"
    replace: "daily"

- name: Enable log compression in Logrotate
  ansible.builtin.replace:
    path: /etc/logrotate.conf
    regexp: "^(#)?compress$"
    replace: "compress"

- name: Configure journald log limits
  ansible.builtin.lineinfile:
    path: /etc/systemd/journald.conf
    regexp: '^#?SystemMaxUse='
    line: 'SystemMaxUse=500M'
  notify: Restart journald

- name: Set kernel parameters
  ansible.posix.sysctl:
    name: "vm.swappiness"
    value: "10"
    state: present
    reload: true
